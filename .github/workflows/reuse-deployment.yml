name: Deployment - Reusable Workflow

on:
  workflow_call:
    inputs:
      mongodb-uri:
        required: true 
        type: string
    secrets:
      k8s-kubeconfig:
        required: true
      mongodb-password:
        required: true 
      sa-jsonkey:
        required: true 

jobs:
    reuse-deploy:
        environment:
            name: development
            url: https://${{ steps.set-ingress-host-address.output.APP_INGRESS_HOST }}
        outputs:
            APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
            
        runs-on: ubuntu-latest
        steps:
        - name: checkout repo
          uses: actions/checkout@v4

        - name: Install kubectl 
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.26.0'

        - name: Authenticate to Google
          uses: "google-github-actions/auth@v2"
          with:
            credentials_json: "${{ secrets.sa-jsonkey }}"
    
        - uses: "google-github-actions/setup-gcloud@v2"
          with:
            install_components: "gke-gcloud-auth-plugin"
    
        - name: Authenticate to GKE cluster
          uses: google-github-actions/get-gke-credentials@v2
          with:
            cluster_name: my-std-gke-cluster
            location: us-central1-c

        - name: setup KUBECONFIG context
          uses: azure/k8s-set-context@v3
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.k8s-kubeconfig }}
        
        - name: Fetch kubernetes cluster details
          run: |
            kubectl version --short
            echo --------------------------------
            kubectl get nodes

        - name: save nginx controller IP as a github env variable
          run: |
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get services nginx-ingress-ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV

        - name: Replace Tokens in manifest Files
          uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '${'
            tokenSuffix: '}'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            INGRESS_IP: ${{ env.INGRESS_IP }}
        
        - name: Check files
          run: |
            cat kubernetes/development/*.yaml

        - name: Create MangoDB secret
          run: |
            kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
            --from-literal=MONGO_URI=${{ inputs.mongodb-uri }} \
            --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.mongodb-password }} \
            --save-config \
            --dry-run=client \
            -o yaml | kubectl apply -f -

        - name: Deploy to Dev Env
          run: |
            kubectl apply -f kubernetes/development/

        - name: Set App Ingress Host URL
          id: set-ingress-host-address
          run: |
            APP_INGRESS_HOST=$(kubectl -n ${{ vars.NAMESPACE }} get ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")
            echo "APP_INGRESS_HOST=$APP_INGRESS_HOST" >> $GITHUB_ENV
            echo "::set-output name=APP_INGRESS_HOST::$APP_INGRESS_HOST"        